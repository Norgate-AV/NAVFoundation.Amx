name: CI

on:
  push:
    branches:
      - master
    paths:
      - "./**/*.axi"
      - "./!__tests__/**/*"
      - ".genlinxrc.yml"
      - "build.ps1"
      - "install.ps1"
      - "manifest.json"
      - ".github/workflows/main.yml"

  pull_request:
    branches:
      - master
    paths:
      - "./**/*.axi"
      - "./!__tests__/**/*"
      - ".genlinxrc.yml"
      - "build.ps1"
      - "install.ps1"
      - "manifest.json"
      - ".github/workflows/main.yml"

  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  build-and-release:
    name: Build & Release

    runs-on: [self-hosted, windows, server]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Show Environment
        run: |
          $PSVersionTable
          $pwd
          Write-Host Path:
          $env:PATH
          Write-Host
          Write-Host whoami:
          whoami
          Write-Host
          Write-Host Environment Variables:
          Get-ChildItem env:

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: pnpm

      - name: Update Global Node.js
        run: |
          fnm install ${{ steps.setup-node.outputs.node-version }}
          fnm use ${{ steps.setup-node.outputs.node-version }}

      - name: Install
        run: |
          pnpm install --frozen-lockfile
          Write-Host "Environment Check:"
          Write-Host "CI: $env:CI"
          Write-Host "GITHUB_TOKEN via `$env:`: $env:GITHUB_TOKEN"
          Write-Host "GITHUB_TOKEN via Get-ChildItem:" (Get-ChildItem env: | Where-Object {$_.Name -eq 'GITHUB_TOKEN'})
          ./install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: ./build.ps1 -Verbose

      - name: Release
        id: release
        if: github.ref == 'refs/heads/master'
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait before Dispatch
        if: ${{ github.ref == 'refs/heads/master' && steps.release.outputs.new_release_published == 'true' }}
        run: Start-Sleep -Seconds 30

      - name: Dispatch Scoop Excavator
        if: ${{ github.ref == 'refs/heads/master' && steps.release.outputs.new_release_published == 'true' }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.SCOOP_NORGATEAV_AMX }}
          repository: norgate-av/scoop-norgateav-amx
          event-type: excavate
          client-payload: |-
            {
              "repo": {
                "name": "${{ github.repository }}",
                "owner": "${{ github.repository_owner }}",
                "ref": "${{ github.ref }}",
                "sha": "${{ steps.release.outputs.new_release_git_head }}",
                "tag": "${{ steps.release.outputs.new_release_git_tag }}"
              }
            }
