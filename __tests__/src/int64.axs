PROGRAM_NAME='int64'

#DEFINE __MAIN__
#DEFINE TESTING_NAVINT64ADD
#DEFINE TESTING_NAVINT64SUBTRACT
#DEFINE TESTING_NAVINT64MULTIPLY
#DEFINE TESTING_NAVINT64FINDHIGHESTBIT
#DEFINE TESTING_NAVINT64DIVIDE
#DEFINE TESTING_NAVINT64BITOPS
#DEFINE TESTING_NAVINT64SHIFTS
#DEFINE TESTING_NAVINT64COMPARISON
#DEFINE TESTING_NAVINT64CONVERSION
#DEFINE TESTING_NAVINT64UTILITIES
#DEFINE TESTING_NAVINT64ROTATION
#DEFINE TESTING_NAVINT64ENDTOENDTESTS
#DEFINE TESTING_NAVINT64SPECIFICROTATATION
#DEFINE TESTING_NAVINT64ADVANCEDROTATION
#DEFINE TESTING_NAVINT64SHA512OPERATIONS

#include 'NAVFoundation.Core.axi'
#include 'NAVFoundation.Encoding.axi'
#include 'NAVFoundation.Int64.axi'
#include 'NAVInt64Shared.axi'

#IF_DEFINED TESTING_NAVINT64ADD
#include 'NAVInt64Add.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64SUBTRACT
#include 'NAVInt64Subtract.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64MULTIPLY
#include 'NAVInt64Multiply.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64DIVIDE
#include 'NAVInt64Divide.axi'
// Include specific division tests when division testing is enabled
#include 'NAVInt64SpecificDivisionTests.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64BITOPS
#include 'NAVInt64BitOps.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64SHIFTS
#include 'NAVInt64Shifts.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64COMPARISON
#include 'NAVInt64Comparison.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64CONVERSION
#include 'NAVInt64Conversion.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64UTILITIES
#include 'NAVInt64Utilities.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64ENDTOENDTESTS
#include 'NAVInt64EndToEndTests.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64FINDHIGHESTBIT
#include 'NAVInt64FindHighestBit.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64ROTATION
#include 'NAVInt64RotationTests.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64SPECIFICROTATATION
#include 'NAVInt64SpecificRotationTests.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64ADVANCEDROTATION
#include 'NAVInt64AdvancedRotationTests.axi'
#END_IF

#IF_DEFINED TESTING_NAVINT64SHA512OPERATIONS
#include 'NAVInt64SHA512OperationsTests.axi'
#END_IF


DEFINE_DEVICE

dvTP = 10001:1:0


define_function RunTests() {
    #IF_DEFINED TESTING_NAVINT64ADD
    RunNAVInt64AddTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64SUBTRACT
    RunNAVInt64SubtractTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64MULTIPLY
    RunNAVInt64MultiplyTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64DIVIDE
    RunNAVInt64DivideTests()
    // Run the specific division tests after the regular division tests
    RunNAVInt64SpecificDivisionTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64BITOPS
    RunNAVInt64BitOpsTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64SHIFTS
    RunNAVInt64ShiftsTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64COMPARISON
    RunNAVInt64ComparisonTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64CONVERSION
    RunNAVInt64ConversionTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64UTILITIES
    RunNAVInt64UtilitiesTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64ENDTOENDTESTS
    RunNAVInt64EndToEndTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64FINDHIGHESTBIT
    RunNAVInt64FindHighestBitTests()
    #END_IF

    #IF_DEFINED TESTING_NAVINT64ROTATION
    RunNAVInt64RotationTests()
    #END_IF

    // Run the specific SHA-512 rotation tests
    #IF_DEFINED TESTING_NAVINT64SPECIFICROTATATION
    RunNAVInt64SpecificRotationTests()
    #END_IF

    // Run the advanced rotation tests
    #IF_DEFINED TESTING_NAVINT64ADVANCEDROTATION
    RunNAVInt64AdvancedRotationTests()
    #END_IF

    // Run the SHA-512 specific operation tests
    #IF_DEFINED TESTING_NAVINT64SHA512OPERATIONS
    RunNAVInt64SHA512OperationsTests()
    #END_IF
}


DEFINE_EVENT

button_event[dvTP, 1] {
    push: {
        set_log_level(NAV_LOG_LEVEL_DEBUG)
        RunTests()
    }
}
